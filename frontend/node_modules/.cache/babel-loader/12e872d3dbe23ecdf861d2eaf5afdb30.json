{"ast":null,"code":"var _jsxFileName = \"/Users/leodube/Desktop/developer_hw/frontend/src/pages/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport teamsService from \"../services\";\nimport { TeamAppBar, TeamsList, Roster } from \"../components\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\n\nconst Dashboard = () => {\n  _s();\n\n  const [teams, setTeams] = useState();\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n  useEffect(() => {\n    if (!teams) {\n      getTeams();\n    }\n  });\n\n  const getTeams = async () => {\n    let res = await teamsService.getTeams();\n    setTeams( // sort teams by name\n    res.sort((firstEl, secondEl) => {\n      return firstEl.name.localeCompare(secondEl.name);\n    }));\n  };\n\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TeamAppBar, {\n      team: teams && teams[selectedIndex],\n      drawerWidth: drawerWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TeamsList, {\n      teams: teams,\n      drawerWidth: drawerWidth,\n      handleListItemClick: handleListItemClick,\n      selectedIndex: selectedIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"main\",\n      sx: {\n        flexGrow: 1,\n        bgcolor: \"background.default\",\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Roster, {\n        team: teams && teams[selectedIndex]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"tDfAaeVzbkwYrr7e8tb8id+ECzk=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/leodube/Desktop/developer_hw/frontend/src/pages/Dashboard.js"],"names":["React","useState","useEffect","teamsService","TeamAppBar","TeamsList","Roster","Box","Toolbar","Typography","drawerWidth","Dashboard","teams","setTeams","selectedIndex","setSelectedIndex","getTeams","res","sort","firstEl","secondEl","name","localeCompare","handleListItemClick","event","index","flexGrow","bgcolor","p"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,aAAzB;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,MAAhC,QAA8C,eAA9C;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,MAAMC,WAAW,GAAG,GAApB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,EAAlC;AACA,QAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCf,KAAK,CAACC,QAAN,CAAe,CAAf,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACU,KAAL,EAAY;AACVI,MAAAA,QAAQ;AACT;AACF,GAJQ,CAAT;;AAMA,QAAMA,QAAQ,GAAG,YAAY;AAC3B,QAAIC,GAAG,GAAG,MAAMd,YAAY,CAACa,QAAb,EAAhB;AACAH,IAAAA,QAAQ,EACN;AACAI,IAAAA,GAAG,CAACC,IAAJ,CAAS,CAACC,OAAD,EAAUC,QAAV,KAAuB;AAC9B,aAAOD,OAAO,CAACE,IAAR,CAAaC,aAAb,CAA2BF,QAAQ,CAACC,IAApC,CAAP;AACD,KAFD,CAFM,CAAR;AAMD,GARD;;AAUA,QAAME,mBAAmB,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC5CV,IAAAA,gBAAgB,CAACU,KAAD,CAAhB;AACD,GAFD;;AAIA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,IAAI,EAAEb,KAAK,IAAIA,KAAK,CAACE,aAAD,CADtB;AAEE,MAAA,WAAW,EAAEJ;AAFf;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,SAAD;AACE,MAAA,KAAK,EAAEE,KADT;AAEE,MAAA,WAAW,EAAEF,WAFf;AAGE,MAAA,mBAAmB,EAAEa,mBAHvB;AAIE,MAAA,aAAa,EAAET;AAJjB;AAAA;AAAA;AAAA;AAAA,YALF,eAWE,QAAC,GAAD;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,EAAE,EAAE;AAAEY,QAAAA,QAAQ,EAAE,CAAZ;AAAeC,QAAAA,OAAO,EAAE,oBAAxB;AAA8CC,QAAAA,CAAC,EAAE;AAAjD,OAFN;AAAA,8BAIE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAEhB,KAAK,IAAIA,KAAK,CAACE,aAAD;AAA5B;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA7CD;;GAAMH,S;;KAAAA,S;AA+CN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport teamsService from \"../services\";\nimport { TeamAppBar, TeamsList, Roster } from \"../components\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\n\nconst drawerWidth = 240;\n\nconst Dashboard = () => {\n  const [teams, setTeams] = useState();\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n\n  useEffect(() => {\n    if (!teams) {\n      getTeams();\n    }\n  });\n\n  const getTeams = async () => {\n    let res = await teamsService.getTeams();\n    setTeams(\n      // sort teams by name\n      res.sort((firstEl, secondEl) => {\n        return firstEl.name.localeCompare(secondEl.name);\n      })\n    );\n  };\n\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n  };\n\n  return (\n    <React.Fragment>\n      <TeamAppBar\n        team={teams && teams[selectedIndex]}\n        drawerWidth={drawerWidth}\n      />\n      <TeamsList\n        teams={teams}\n        drawerWidth={drawerWidth}\n        handleListItemClick={handleListItemClick}\n        selectedIndex={selectedIndex}\n      />\n      <Box\n        component=\"main\"\n        sx={{ flexGrow: 1, bgcolor: \"background.default\", p: 3 }}\n      >\n        <Toolbar />\n        <Roster team={teams && teams[selectedIndex]} />\n      </Box>\n    </React.Fragment>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}