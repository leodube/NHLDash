{"ast":null,"code":"var _jsxFileName = \"/Users/leodube/Desktop/developer_hw/frontend/src/pages/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { teamsService } from \"../services\";\nimport { TeamAppBar, TeamsList, Roster, PlayerCard } from \"../components\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\n\nconst Dashboard = () => {\n  _s();\n\n  const [teams, setTeams] = useState();\n  const [selectedTeamIndex, setSelectedTeamIndex] = useState(0);\n  const [selectedPlayerId, setSelectedPlayerId] = useState();\n  const [openPlayerModal, setOpenPlayerModal] = useState(false);\n  useEffect(() => {\n    if (!teams) {\n      getTeams();\n    }\n  });\n\n  const getTeams = async () => {\n    let res = await teamsService.getTeams();\n    setTeams( // sort teams by name\n    res.sort((firstEl, secondEl) => {\n      return firstEl.name.localeCompare(secondEl.name);\n    }));\n  };\n\n  const handleTeamsListItemClick = (event, index) => {\n    setSelectedTeamIndex(index);\n  };\n\n  const handlePlayerModalOpen = (event, id) => {\n    setSelectedPlayerId(id);\n    setOpenPlayerModal(true);\n  };\n\n  const handlePlayerModalClose = () => {\n    setOpenPlayerModal(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TeamAppBar, {\n      team: teams && teams[selectedTeamIndex],\n      drawerWidth: drawerWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TeamsList, {\n      teams: teams,\n      drawerWidth: drawerWidth,\n      handleTeamsListItemClick: handleTeamsListItemClick,\n      selectedTeamIndex: selectedTeamIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"main\",\n      sx: {\n        flexGrow: 1,\n        bgcolor: \"background.default\",\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Roster, {\n        team: teams && teams[selectedTeamIndex],\n        openPlayerModal: handlePlayerModalOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PlayerCard, {\n        id: selectedPlayerId,\n        open: openPlayerModal,\n        handleClose: handlePlayerModalClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"fXDA9fUqG75h+VfizveE6z1dl8I=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/leodube/Desktop/developer_hw/frontend/src/pages/Dashboard.js"],"names":["React","useState","useEffect","teamsService","TeamAppBar","TeamsList","Roster","PlayerCard","Box","Toolbar","drawerWidth","Dashboard","teams","setTeams","selectedTeamIndex","setSelectedTeamIndex","selectedPlayerId","setSelectedPlayerId","openPlayerModal","setOpenPlayerModal","getTeams","res","sort","firstEl","secondEl","name","localeCompare","handleTeamsListItemClick","event","index","handlePlayerModalOpen","id","handlePlayerModalClose","flexGrow","bgcolor","p"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { teamsService } from \"../services\";\nimport { TeamAppBar, TeamsList, Roster, PlayerCard } from \"../components\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\n\nconst drawerWidth = 240;\n\nconst Dashboard = () => {\n  const [teams, setTeams] = useState();\n  const [selectedTeamIndex, setSelectedTeamIndex] = useState(0);\n  const [selectedPlayerId, setSelectedPlayerId] = useState();\n  const [openPlayerModal, setOpenPlayerModal] = useState(false);\n\n  useEffect(() => {\n    if (!teams) {\n      getTeams();\n    }\n  });\n\n  const getTeams = async () => {\n    let res = await teamsService.getTeams();\n    setTeams(\n      // sort teams by name\n      res.sort((firstEl, secondEl) => {\n        return firstEl.name.localeCompare(secondEl.name);\n      })\n    );\n  };\n\n  const handleTeamsListItemClick = (event, index) => {\n    setSelectedTeamIndex(index);\n  };\n\n  const handlePlayerModalOpen = (event, id) => {\n    setSelectedPlayerId(id);\n    setOpenPlayerModal(true);\n  };\n\n  const handlePlayerModalClose = () => {\n    setOpenPlayerModal(false);\n  };\n\n  return (\n    <React.Fragment>\n      <TeamAppBar\n        team={teams && teams[selectedTeamIndex]}\n        drawerWidth={drawerWidth}\n      />\n      <TeamsList\n        teams={teams}\n        drawerWidth={drawerWidth}\n        handleTeamsListItemClick={handleTeamsListItemClick}\n        selectedTeamIndex={selectedTeamIndex}\n      />\n      <Box\n        component=\"main\"\n        sx={{ flexGrow: 1, bgcolor: \"background.default\", p: 3 }}\n      >\n        <Toolbar />\n        <Roster\n          team={teams && teams[selectedTeamIndex]}\n          openPlayerModal={handlePlayerModalOpen}\n        />\n        <PlayerCard\n          id={selectedPlayerId}\n          open={openPlayerModal}\n          handleClose={handlePlayerModalClose}\n        />\n      </Box>\n    </React.Fragment>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}