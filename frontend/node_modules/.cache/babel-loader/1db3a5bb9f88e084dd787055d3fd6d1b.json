{"ast":null,"code":"var _jsxFileName = \"/Users/leodube/Desktop/developer_hw/frontend/src/pages/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { teamsService, playerService } from \"../services\";\nimport { TeamAppBar, TeamsList, Roster, PlayerCard } from \"../components\"; // MUI imports\n\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Fab from \"@mui/material/Fab\";\nimport QuestionMarkIcon from \"@mui/icons-material/QuestionMark\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 240;\n\nconst Dashboard = () => {\n  _s();\n\n  let navigate = useNavigate();\n  const [teams, setTeams] = useState();\n  const [selectedTeamIndex, setSelectedTeamIndex] = useState(0);\n  const [selectedPlayer, setSelectedPlayer] = useState();\n  const [openPlayerModal, setOpenPlayerModal] = useState(false);\n  useEffect(() => {\n    if (!teams) {\n      getTeams();\n    }\n  });\n\n  const getTeams = async () => {\n    let resTeam = await teamsService.getTeams();\n    setTeams( // sort teams by name\n    resTeam.sort((firstEl, secondEl) => {\n      return firstEl.name.localeCompare(secondEl.name);\n    }));\n  };\n\n  const getPlayer = async id => {\n    let resPlayerInfo = await playerService.getPlayer(id);\n    let resPlayerStats = await playerService.getPlayerStats(id);\n    setSelectedPlayer({\n      info: resPlayerInfo,\n      stats: resPlayerStats\n    });\n  };\n\n  const handleTeamsListItemClick = (event, index) => {\n    setSelectedTeamIndex(index);\n  };\n\n  const handlePlayerModalOpen = (event, id) => {\n    getPlayer(id);\n    setOpenPlayerModal(true);\n  };\n\n  const handlePlayerModalClose = () => {\n    setOpenPlayerModal(false);\n    setSelectedPlayer();\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TeamAppBar, {\n      team: teams && teams[selectedTeamIndex],\n      drawerWidth: drawerWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TeamsList, {\n      teams: teams,\n      drawerWidth: drawerWidth,\n      handleTeamsListItemClick: handleTeamsListItemClick,\n      selectedTeamIndex: selectedTeamIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"main\",\n      sx: {\n        flexGrow: 1,\n        bgcolor: \"background.default\",\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Roster, {\n        team: teams && teams[selectedTeamIndex],\n        openPlayerModal: handlePlayerModalOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), selectedPlayer && /*#__PURE__*/_jsxDEV(PlayerCard, {\n        player: selectedPlayer,\n        open: openPlayerModal,\n        handleClose: handlePlayerModalClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Fab, {\n        sx: {\n          position: \"fixed\",\n          bottom: 16,\n          right: 16\n        },\n        color: \"primary\",\n        onClick: () => navigate(\"/about\"),\n        children: /*#__PURE__*/_jsxDEV(QuestionMarkIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"HX+N6S2CddG15yv1mffHfhmQUBM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/leodube/Desktop/developer_hw/frontend/src/pages/Dashboard.js"],"names":["React","useState","useEffect","useNavigate","teamsService","playerService","TeamAppBar","TeamsList","Roster","PlayerCard","Box","Toolbar","Fab","QuestionMarkIcon","drawerWidth","Dashboard","navigate","teams","setTeams","selectedTeamIndex","setSelectedTeamIndex","selectedPlayer","setSelectedPlayer","openPlayerModal","setOpenPlayerModal","getTeams","resTeam","sort","firstEl","secondEl","name","localeCompare","getPlayer","id","resPlayerInfo","resPlayerStats","getPlayerStats","info","stats","handleTeamsListItemClick","event","index","handlePlayerModalOpen","handlePlayerModalClose","flexGrow","bgcolor","p","position","bottom","right"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { teamsService, playerService } from \"../services\";\nimport { TeamAppBar, TeamsList, Roster, PlayerCard } from \"../components\";\n\n// MUI imports\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Fab from \"@mui/material/Fab\";\nimport QuestionMarkIcon from \"@mui/icons-material/QuestionMark\";\n\nconst drawerWidth = 240;\n\nconst Dashboard = () => {\n  let navigate = useNavigate();\n  const [teams, setTeams] = useState();\n  const [selectedTeamIndex, setSelectedTeamIndex] = useState(0);\n  const [selectedPlayer, setSelectedPlayer] = useState();\n  const [openPlayerModal, setOpenPlayerModal] = useState(false);\n\n  useEffect(() => {\n    if (!teams) {\n      getTeams();\n    }\n  });\n\n  const getTeams = async () => {\n    let resTeam = await teamsService.getTeams();\n    setTeams(\n      // sort teams by name\n      resTeam.sort((firstEl, secondEl) => {\n        return firstEl.name.localeCompare(secondEl.name);\n      })\n    );\n  };\n\n  const getPlayer = async (id) => {\n    let resPlayerInfo = await playerService.getPlayer(id);\n    let resPlayerStats = await playerService.getPlayerStats(id);\n    setSelectedPlayer({ info: resPlayerInfo, stats: resPlayerStats });\n  };\n\n  const handleTeamsListItemClick = (event, index) => {\n    setSelectedTeamIndex(index);\n  };\n\n  const handlePlayerModalOpen = (event, id) => {\n    getPlayer(id);\n    setOpenPlayerModal(true);\n  };\n\n  const handlePlayerModalClose = () => {\n    setOpenPlayerModal(false);\n    setSelectedPlayer();\n  };\n\n  return (\n    <React.Fragment>\n      <TeamAppBar\n        team={teams && teams[selectedTeamIndex]}\n        drawerWidth={drawerWidth}\n      />\n      <TeamsList\n        teams={teams}\n        drawerWidth={drawerWidth}\n        handleTeamsListItemClick={handleTeamsListItemClick}\n        selectedTeamIndex={selectedTeamIndex}\n      />\n      <Box\n        component=\"main\"\n        sx={{ flexGrow: 1, bgcolor: \"background.default\", p: 3 }}\n      >\n        <Toolbar />\n        <Roster\n          team={teams && teams[selectedTeamIndex]}\n          openPlayerModal={handlePlayerModalOpen}\n        />\n        {selectedPlayer && (\n          <PlayerCard\n            player={selectedPlayer}\n            open={openPlayerModal}\n            handleClose={handlePlayerModalClose}\n          />\n        )}\n        <Fab\n          sx={{ position: \"fixed\", bottom: 16, right: 16 }}\n          color=\"primary\"\n          onClick={() => navigate(\"/about\")}\n        >\n          <QuestionMarkIcon />\n        </Fab>\n      </Box>\n    </React.Fragment>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}